#0-1 knapsack bottom-up

def Knapsack(wt,val,W,n):
  dp = [[0 for x in range(W + 1)] for x in range(n + 1)] 
  for i in range(1,n+1):
    for j in range(1,W+1):
      if wt[i-1]<=j:
        dp[i][j]=max( dp[i-1][j] , val[i-1] + dp[i-1] [j-wt[i-1]])
      elif wt[i-1]>j:
        dp[i][j]=dp[i-1][j]
  return dp[n][W]
val = [1,2,3] 
wt = [4,5,1] 
W = 4
n=3

print(Knapsack(wt,val,W,n))
